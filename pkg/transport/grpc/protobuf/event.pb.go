// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package protobuf

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of TimestampRange from common.proto

type Event struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NamespaceId          string               `protobuf:"bytes,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	LinkId               string               `protobuf:"bytes,3,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	AliasId              string               `protobuf:"bytes,4,opt,name=alias_id,json=aliasId,proto3" json:"alias_id,omitempty"`
	TargetId             string               `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Identifier           string               `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Context              []byte               `protobuf:"bytes,7,opt,name=context,proto3" json:"context,omitempty"`
	Code                 int32                `protobuf:"varint,8,opt,name=code,proto3" json:"code,omitempty"`
	Url                  string               `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Event) GetNamespaceId() string {
	if m != nil {
		return m.NamespaceId
	}
	return ""
}

func (m *Event) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *Event) GetAliasId() string {
	if m != nil {
		return m.AliasId
	}
	return ""
}

func (m *Event) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *Event) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Event) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Event) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Event) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Event) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type EventFilter struct {
	NamespaceId          string          `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	LinkId               string          `protobuf:"bytes,2,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	AliasId              string          `protobuf:"bytes,3,opt,name=alias_id,json=aliasId,proto3" json:"alias_id,omitempty"`
	TargetId             string          `protobuf:"bytes,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Identifier           string          `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Code                 int32           `protobuf:"varint,6,opt,name=code,proto3" json:"code,omitempty"`
	Url                  string          `protobuf:"bytes,7,opt,name=url,proto3" json:"url,omitempty"`
	CreatedAt            *TimestampRange `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Limit                uint32          `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *EventFilter) Reset()         { *m = EventFilter{} }
func (m *EventFilter) String() string { return proto.CompactTextString(m) }
func (*EventFilter) ProtoMessage()    {}
func (*EventFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}
func (m *EventFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventFilter.Unmarshal(m, b)
}
func (m *EventFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventFilter.Marshal(b, m, deterministic)
}
func (m *EventFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventFilter.Merge(m, src)
}
func (m *EventFilter) XXX_Size() int {
	return xxx_messageInfo_EventFilter.Size(m)
}
func (m *EventFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EventFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EventFilter proto.InternalMessageInfo

func (m *EventFilter) GetNamespaceId() string {
	if m != nil {
		return m.NamespaceId
	}
	return ""
}

func (m *EventFilter) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *EventFilter) GetAliasId() string {
	if m != nil {
		return m.AliasId
	}
	return ""
}

func (m *EventFilter) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *EventFilter) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *EventFilter) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *EventFilter) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *EventFilter) GetCreatedAt() *TimestampRange {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *EventFilter) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadEventsRequest struct {
	// Types that are valid to be assigned to Filter:
	//	*ReadEventsRequest_Id
	//	*ReadEventsRequest_Condition
	Filter               isReadEventsRequest_Filter `protobuf_oneof:"filter"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ReadEventsRequest) Reset()         { *m = ReadEventsRequest{} }
func (m *ReadEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ReadEventsRequest) ProtoMessage()    {}
func (*ReadEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{2}
}
func (m *ReadEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadEventsRequest.Unmarshal(m, b)
}
func (m *ReadEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadEventsRequest.Marshal(b, m, deterministic)
}
func (m *ReadEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadEventsRequest.Merge(m, src)
}
func (m *ReadEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ReadEventsRequest.Size(m)
}
func (m *ReadEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadEventsRequest proto.InternalMessageInfo

type isReadEventsRequest_Filter interface {
	isReadEventsRequest_Filter()
}

type ReadEventsRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type ReadEventsRequest_Condition struct {
	Condition *EventFilter `protobuf:"bytes,2,opt,name=condition,proto3,oneof"`
}

func (*ReadEventsRequest_Id) isReadEventsRequest_Filter() {}

func (*ReadEventsRequest_Condition) isReadEventsRequest_Filter() {}

func (m *ReadEventsRequest) GetFilter() isReadEventsRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ReadEventsRequest) GetId() uint32 {
	if x, ok := m.GetFilter().(*ReadEventsRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (m *ReadEventsRequest) GetCondition() *EventFilter {
	if x, ok := m.GetFilter().(*ReadEventsRequest_Condition); ok {
		return x.Condition
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReadEventsRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReadEventsRequest_OneofMarshaler, _ReadEventsRequest_OneofUnmarshaler, _ReadEventsRequest_OneofSizer, []interface{}{
		(*ReadEventsRequest_Id)(nil),
		(*ReadEventsRequest_Condition)(nil),
	}
}

func _ReadEventsRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReadEventsRequest)
	// filter
	switch x := m.Filter.(type) {
	case *ReadEventsRequest_Id:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Id))
	case *ReadEventsRequest_Condition:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Condition); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReadEventsRequest.Filter has unexpected type %T", x)
	}
	return nil
}

func _ReadEventsRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReadEventsRequest)
	switch tag {
	case 1: // filter.id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Filter = &ReadEventsRequest_Id{uint32(x)}
		return true, err
	case 2: // filter.condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EventFilter)
		err := b.DecodeMessage(msg)
		m.Filter = &ReadEventsRequest_Condition{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReadEventsRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReadEventsRequest)
	// filter
	switch x := m.Filter.(type) {
	case *ReadEventsRequest_Id:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Id))
	case *ReadEventsRequest_Condition:
		s := proto.Size(x.Condition)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ReadEventsResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadEventsResponse) Reset()         { *m = ReadEventsResponse{} }
func (m *ReadEventsResponse) String() string { return proto.CompactTextString(m) }
func (*ReadEventsResponse) ProtoMessage()    {}
func (*ReadEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{3}
}
func (m *ReadEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadEventsResponse.Unmarshal(m, b)
}
func (m *ReadEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadEventsResponse.Marshal(b, m, deterministic)
}
func (m *ReadEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadEventsResponse.Merge(m, src)
}
func (m *ReadEventsResponse) XXX_Size() int {
	return xxx_messageInfo_ReadEventsResponse.Size(m)
}
func (m *ReadEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadEventsResponse proto.InternalMessageInfo

func (m *ReadEventsResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type ListenEventsRequest struct {
	Filter               *EventFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListenEventsRequest) Reset()         { *m = ListenEventsRequest{} }
func (m *ListenEventsRequest) String() string { return proto.CompactTextString(m) }
func (*ListenEventsRequest) ProtoMessage()    {}
func (*ListenEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{4}
}
func (m *ListenEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenEventsRequest.Unmarshal(m, b)
}
func (m *ListenEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenEventsRequest.Marshal(b, m, deterministic)
}
func (m *ListenEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenEventsRequest.Merge(m, src)
}
func (m *ListenEventsRequest) XXX_Size() int {
	return xxx_messageInfo_ListenEventsRequest.Size(m)
}
func (m *ListenEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenEventsRequest proto.InternalMessageInfo

func (m *ListenEventsRequest) GetFilter() *EventFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "protobuf.Event")
	proto.RegisterType((*EventFilter)(nil), "protobuf.EventFilter")
	proto.RegisterType((*ReadEventsRequest)(nil), "protobuf.ReadEventsRequest")
	proto.RegisterType((*ReadEventsResponse)(nil), "protobuf.ReadEventsResponse")
	proto.RegisterType((*ListenEventsRequest)(nil), "protobuf.ListenEventsRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ListenerClient is the client API for Listener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ListenerClient interface {
	Read(ctx context.Context, in *ReadEventsRequest, opts ...grpc.CallOption) (*ReadEventsResponse, error)
	Listen(ctx context.Context, in *ListenEventsRequest, opts ...grpc.CallOption) (Listener_ListenClient, error)
}

type listenerClient struct {
	cc *grpc.ClientConn
}

func NewListenerClient(cc *grpc.ClientConn) ListenerClient {
	return &listenerClient{cc}
}

func (c *listenerClient) Read(ctx context.Context, in *ReadEventsRequest, opts ...grpc.CallOption) (*ReadEventsResponse, error) {
	out := new(ReadEventsResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Listener/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *listenerClient) Listen(ctx context.Context, in *ListenEventsRequest, opts ...grpc.CallOption) (Listener_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Listener_serviceDesc.Streams[0], "/protobuf.Listener/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &listenerListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Listener_ListenClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type listenerListenClient struct {
	grpc.ClientStream
}

func (x *listenerListenClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ListenerServer is the server API for Listener service.
type ListenerServer interface {
	Read(context.Context, *ReadEventsRequest) (*ReadEventsResponse, error)
	Listen(*ListenEventsRequest, Listener_ListenServer) error
}

func RegisterListenerServer(s *grpc.Server, srv ListenerServer) {
	s.RegisterService(&_Listener_serviceDesc, srv)
}

func _Listener_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ListenerServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Listener/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ListenerServer).Read(ctx, req.(*ReadEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Listener_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenEventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ListenerServer).Listen(m, &listenerListenServer{stream})
}

type Listener_ListenServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type listenerListenServer struct {
	grpc.ServerStream
}

func (x *listenerListenServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Listener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Listener",
	HandlerType: (*ListenerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Listener_Read_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _Listener_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 492 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xcf, 0x8e, 0xd3, 0x30,
	0x10, 0xc6, 0x9b, 0xb4, 0x4d, 0xd3, 0x49, 0x17, 0x96, 0x01, 0x44, 0xc8, 0xf2, 0x27, 0xe4, 0x42,
	0x2e, 0x74, 0x51, 0x11, 0x42, 0x48, 0x70, 0xe0, 0xaf, 0xb6, 0x12, 0x07, 0x64, 0x71, 0x5f, 0x79,
	0xe3, 0x69, 0x65, 0x91, 0xd8, 0x25, 0x71, 0x11, 0x2f, 0xc1, 0x95, 0x47, 0xe0, 0x39, 0x51, 0x9c,
	0x86, 0x74, 0xb7, 0xdd, 0x9e, 0xe2, 0x99, 0x6f, 0xf2, 0xf9, 0xf3, 0x4f, 0x36, 0x04, 0xf4, 0x93,
	0x94, 0x99, 0xae, 0x4a, 0x6d, 0x34, 0xfa, 0xf6, 0x73, 0xb1, 0x5e, 0x44, 0x93, 0x4c, 0x17, 0x85,
	0x56, 0x4d, 0x3f, 0x7a, 0xbc, 0xd4, 0x7a, 0x99, 0xd3, 0x69, 0x2b, 0x9f, 0x1a, 0x59, 0x50, 0x65,
	0x78, 0xb1, 0x6a, 0x06, 0x92, 0xbf, 0x2e, 0x0c, 0x3f, 0xd5, 0x46, 0x78, 0x03, 0x5c, 0x29, 0x42,
	0x27, 0x76, 0xd2, 0x23, 0xe6, 0x4a, 0x81, 0x4f, 0x60, 0xa2, 0x78, 0x41, 0xd5, 0x8a, 0x67, 0x74,
	0x2e, 0x45, 0xe8, 0xc6, 0x4e, 0x3a, 0x66, 0xc1, 0xff, 0xde, 0x5c, 0xe0, 0x3d, 0x18, 0xe5, 0x52,
	0x7d, 0xaf, 0xd5, 0xbe, 0x55, 0xbd, 0xba, 0x9c, 0x0b, 0xbc, 0x0f, 0x3e, 0xcf, 0x25, 0xaf, 0x6a,
	0x65, 0x60, 0x95, 0x91, 0xad, 0xe7, 0x02, 0x4f, 0x60, 0x6c, 0x78, 0xb9, 0x24, 0x53, 0x6b, 0x43,
	0xab, 0xf9, 0x4d, 0x63, 0x2e, 0xf0, 0x11, 0x80, 0x14, 0xa4, 0x8c, 0x5c, 0x48, 0x2a, 0x43, 0xcf,
	0xaa, 0x5b, 0x1d, 0x0c, 0x61, 0x94, 0x69, 0x65, 0xe8, 0x97, 0x09, 0x47, 0xb1, 0x93, 0x4e, 0x58,
	0x5b, 0x22, 0xc2, 0x20, 0xd3, 0x82, 0x42, 0x3f, 0x76, 0xd2, 0x21, 0xb3, 0x6b, 0x3c, 0x86, 0xfe,
	0xba, 0xcc, 0xc3, 0xb1, 0xb5, 0xa9, 0x97, 0xf8, 0x1a, 0x20, 0x2b, 0x89, 0x1b, 0x12, 0xe7, 0xdc,
	0x84, 0x10, 0x3b, 0x69, 0x30, 0x8b, 0xa6, 0x0d, 0xa3, 0x69, 0xcb, 0x68, 0xfa, 0xad, 0x65, 0xc4,
	0xc6, 0x9b, 0xe9, 0x77, 0x26, 0xf9, 0xe3, 0x42, 0x60, 0x41, 0x7d, 0x96, 0xb9, 0xa1, 0x72, 0x07,
	0x8f, 0x73, 0x10, 0x8f, 0x7b, 0x2d, 0x9e, 0xfe, 0x01, 0x3c, 0x83, 0x83, 0x78, 0x86, 0x3b, 0x78,
	0x5a, 0x08, 0xde, 0x2e, 0x84, 0x51, 0x07, 0xe1, 0xd5, 0x25, 0x08, 0xbe, 0x85, 0x10, 0xee, 0x3b,
	0x3d, 0x57, 0x4b, 0xda, 0x42, 0x80, 0x77, 0x60, 0x98, 0xcb, 0x42, 0x1a, 0x4b, 0xf4, 0x88, 0x35,
	0x45, 0xb2, 0x80, 0x5b, 0x8c, 0xb8, 0xb0, 0x6c, 0x2a, 0x46, 0x3f, 0xd6, 0x54, 0x19, 0x3c, 0xee,
	0x2e, 0xd3, 0x59, 0xcf, 0x5e, 0xa7, 0x97, 0x30, 0xce, 0xb4, 0x12, 0xd2, 0x48, 0xad, 0x2c, 0x8e,
	0x60, 0x76, 0xb7, 0xdb, 0x74, 0x8b, 0xec, 0x59, 0x8f, 0x75, 0x93, 0xef, 0x7d, 0xf0, 0x16, 0xb6,
	0x9d, 0xbc, 0x05, 0xdc, 0xde, 0xa7, 0x5a, 0x69, 0x55, 0x11, 0x3e, 0x05, 0xcf, 0xbe, 0x83, 0x2a,
	0x74, 0xe2, 0x7e, 0x1a, 0xcc, 0x6e, 0x5e, 0xf1, 0x64, 0x1b, 0x39, 0xf9, 0x08, 0xb7, 0xbf, 0xc8,
	0xca, 0x90, 0xba, 0x1c, 0xf4, 0x59, 0xeb, 0x6f, 0xc3, 0x5e, 0x97, 0x89, 0x6d, 0x86, 0x66, 0xbf,
	0x1d, 0xf0, 0x1b, 0x1b, 0x2a, 0xf1, 0x03, 0x0c, 0xea, 0x44, 0x78, 0xd2, 0xfd, 0xb3, 0x43, 0x22,
	0x7a, 0xb0, 0x5f, 0x6c, 0xe2, 0x27, 0x3d, 0x7c, 0x03, 0x5e, 0x63, 0x88, 0x0f, 0xbb, 0xc9, 0x3d,
	0x49, 0xa3, 0xab, 0x27, 0x4b, 0x7a, 0xcf, 0x9d, 0xaf, 0xbd, 0x0b, 0xcf, 0x76, 0x5f, 0xfc, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0xf0, 0xd8, 0xc0, 0xb6, 0x0f, 0x04, 0x00, 0x00,
}
