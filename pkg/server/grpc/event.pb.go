// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of Error from common.proto

// Ignoring public import of TimestampRange from common.proto

type ReadLogsRequest struct {
	LinkId               string          `protobuf:"bytes,3,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	AliasId              string          `protobuf:"bytes,4,opt,name=alias_id,json=aliasId,proto3" json:"alias_id,omitempty"`
	TargetId             string          `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Identifier           string          `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Uri                  string          `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	Code                 int32           `protobuf:"varint,8,opt,name=code,proto3" json:"code,omitempty"`
	Range                *TimestampRange `protobuf:"bytes,10,opt,name=range,proto3" json:"range,omitempty"`
	Limit                uint32          `protobuf:"varint,15,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ReadLogsRequest) Reset()         { *m = ReadLogsRequest{} }
func (m *ReadLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ReadLogsRequest) ProtoMessage()    {}
func (*ReadLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_d55cdb7365d17a61, []int{0}
}
func (m *ReadLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadLogsRequest.Unmarshal(m, b)
}
func (m *ReadLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadLogsRequest.Marshal(b, m, deterministic)
}
func (dst *ReadLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadLogsRequest.Merge(dst, src)
}
func (m *ReadLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ReadLogsRequest.Size(m)
}
func (m *ReadLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadLogsRequest proto.InternalMessageInfo

func (m *ReadLogsRequest) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *ReadLogsRequest) GetAliasId() string {
	if m != nil {
		return m.AliasId
	}
	return ""
}

func (m *ReadLogsRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *ReadLogsRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ReadLogsRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ReadLogsRequest) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadLogsRequest) GetRange() *TimestampRange {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *ReadLogsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type LogEntry struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LinkId               string               `protobuf:"bytes,3,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	AliasId              string               `protobuf:"bytes,4,opt,name=alias_id,json=aliasId,proto3" json:"alias_id,omitempty"`
	TargetId             string               `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Identifier           string               `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Uri                  string               `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	Code                 int32                `protobuf:"varint,8,opt,name=code,proto3" json:"code,omitempty"`
	Context              []byte               `protobuf:"bytes,9,opt,name=context,proto3" json:"context,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_d55cdb7365d17a61, []int{1}
}
func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (dst *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(dst, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *LogEntry) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *LogEntry) GetAliasId() string {
	if m != nil {
		return m.AliasId
	}
	return ""
}

func (m *LogEntry) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *LogEntry) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *LogEntry) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *LogEntry) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LogEntry) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *LogEntry) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ReadLogsResponse struct {
	Logs                 []*LogEntry `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Err                  *Error      `protobuf:"bytes,15,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReadLogsResponse) Reset()         { *m = ReadLogsResponse{} }
func (m *ReadLogsResponse) String() string { return proto.CompactTextString(m) }
func (*ReadLogsResponse) ProtoMessage()    {}
func (*ReadLogsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_d55cdb7365d17a61, []int{2}
}
func (m *ReadLogsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadLogsResponse.Unmarshal(m, b)
}
func (m *ReadLogsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadLogsResponse.Marshal(b, m, deterministic)
}
func (dst *ReadLogsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadLogsResponse.Merge(dst, src)
}
func (m *ReadLogsResponse) XXX_Size() int {
	return xxx_messageInfo_ReadLogsResponse.Size(m)
}
func (m *ReadLogsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadLogsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadLogsResponse proto.InternalMessageInfo

func (m *ReadLogsResponse) GetLogs() []*LogEntry {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *ReadLogsResponse) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

type ListenLogsRequest struct {
	LinkId               string   `protobuf:"bytes,3,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	AliasId              string   `protobuf:"bytes,4,opt,name=alias_id,json=aliasId,proto3" json:"alias_id,omitempty"`
	TargetId             string   `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Identifier           string   `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Uri                  string   `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	Code                 int32    `protobuf:"varint,8,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenLogsRequest) Reset()         { *m = ListenLogsRequest{} }
func (m *ListenLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ListenLogsRequest) ProtoMessage()    {}
func (*ListenLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_d55cdb7365d17a61, []int{3}
}
func (m *ListenLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenLogsRequest.Unmarshal(m, b)
}
func (m *ListenLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenLogsRequest.Marshal(b, m, deterministic)
}
func (dst *ListenLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenLogsRequest.Merge(dst, src)
}
func (m *ListenLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ListenLogsRequest.Size(m)
}
func (m *ListenLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenLogsRequest proto.InternalMessageInfo

func (m *ListenLogsRequest) GetLinkId() string {
	if m != nil {
		return m.LinkId
	}
	return ""
}

func (m *ListenLogsRequest) GetAliasId() string {
	if m != nil {
		return m.AliasId
	}
	return ""
}

func (m *ListenLogsRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *ListenLogsRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ListenLogsRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *ListenLogsRequest) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func init() {
	proto.RegisterType((*ReadLogsRequest)(nil), "grpc.ReadLogsRequest")
	proto.RegisterType((*LogEntry)(nil), "grpc.LogEntry")
	proto.RegisterType((*ReadLogsResponse)(nil), "grpc.ReadLogsResponse")
	proto.RegisterType((*ListenLogsRequest)(nil), "grpc.ListenLogsRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	Read(ctx context.Context, in *ReadLogsRequest, opts ...grpc.CallOption) (*ReadLogsResponse, error)
	Listen(ctx context.Context, in *ListenLogsRequest, opts ...grpc.CallOption) (Log_ListenClient, error)
}

type logClient struct {
	cc *grpc.ClientConn
}

func NewLogClient(cc *grpc.ClientConn) LogClient {
	return &logClient{cc}
}

func (c *logClient) Read(ctx context.Context, in *ReadLogsRequest, opts ...grpc.CallOption) (*ReadLogsResponse, error) {
	out := new(ReadLogsResponse)
	err := c.cc.Invoke(ctx, "/grpc.Log/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logClient) Listen(ctx context.Context, in *ListenLogsRequest, opts ...grpc.CallOption) (Log_ListenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Log_serviceDesc.Streams[0], "/grpc.Log/Listen", opts...)
	if err != nil {
		return nil, err
	}
	x := &logListenClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Log_ListenClient interface {
	Recv() (*LogEntry, error)
	grpc.ClientStream
}

type logListenClient struct {
	grpc.ClientStream
}

func (x *logListenClient) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	Read(context.Context, *ReadLogsRequest) (*ReadLogsResponse, error)
	Listen(*ListenLogsRequest, Log_ListenServer) error
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadLogsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Log/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).Read(ctx, req.(*ReadLogsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Log_Listen_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LogServer).Listen(m, &logListenServer{stream})
}

type Log_ListenServer interface {
	Send(*LogEntry) error
	grpc.ServerStream
}

type logListenServer struct {
	grpc.ServerStream
}

func (x *logListenServer) Send(m *LogEntry) error {
	return x.ServerStream.SendMsg(m)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Log_Read_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Listen",
			Handler:       _Log_Listen_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "event.proto",
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_event_d55cdb7365d17a61) }

var fileDescriptor_event_d55cdb7365d17a61 = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x93, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0xd7, 0xbb, 0xd9, 0x7f, 0x93, 0xd2, 0x96, 0x51, 0xa1, 0x26, 0x08, 0x88, 0x72, 0x8a,
	0x38, 0xa4, 0x68, 0x11, 0x42, 0x1c, 0x39, 0xf4, 0xb0, 0xd2, 0x1e, 0x90, 0x05, 0xe7, 0x2a, 0x8d,
	0xa7, 0x96, 0x45, 0x62, 0x2f, 0x8e, 0x17, 0xc1, 0x0b, 0xf0, 0x30, 0x3c, 0x1a, 0x4f, 0x81, 0x62,
	0xef, 0xaa, 0xd5, 0x3e, 0x41, 0x6f, 0x9e, 0xef, 0x37, 0x97, 0xef, 0x37, 0x09, 0xa4, 0xf4, 0x93,
	0x8c, 0xaf, 0xb6, 0xce, 0x7a, 0x8b, 0x89, 0x72, 0xdb, 0x26, 0x3b, 0x69, 0x6c, 0xd7, 0x59, 0x13,
	0xb3, 0xec, 0x8d, 0xb2, 0x56, 0xb5, 0x74, 0x15, 0xa6, 0xdb, 0xdd, 0xdd, 0x95, 0xd7, 0x1d, 0xf5,
	0xbe, 0xee, 0xb6, 0x71, 0xa1, 0xf8, 0xc7, 0xe0, 0x4c, 0x50, 0x2d, 0x37, 0x56, 0xf5, 0x82, 0x7e,
	0xec, 0xa8, 0xf7, 0x78, 0x09, 0xf3, 0x56, 0x9b, 0xef, 0x37, 0x5a, 0xf2, 0x49, 0xce, 0xca, 0xa5,
	0x98, 0x0d, 0xe3, 0x5a, 0xe2, 0x0b, 0x58, 0xd4, 0xad, 0xae, 0xfb, 0x81, 0x24, 0x81, 0xcc, 0xc3,
	0xbc, 0x96, 0xf8, 0x12, 0x96, 0xbe, 0x76, 0x8a, 0xfc, 0xc0, 0xa6, 0x81, 0x2d, 0x62, 0xb0, 0x96,
	0xf8, 0x1a, 0x40, 0x4b, 0x32, 0x5e, 0xdf, 0x69, 0x72, 0x7c, 0x16, 0xe8, 0x83, 0x04, 0xcf, 0x61,
	0xb2, 0x73, 0x9a, 0xcf, 0x03, 0x18, 0x9e, 0x88, 0x90, 0x34, 0x56, 0x12, 0x5f, 0xe4, 0xac, 0x9c,
	0x8a, 0xf0, 0xc6, 0xb7, 0x30, 0x75, 0xb5, 0x51, 0xc4, 0x21, 0x67, 0x65, 0xba, 0xba, 0xa8, 0x86,
	0xbe, 0xd5, 0xd7, 0x43, 0x21, 0x31, 0x30, 0x11, 0x57, 0xf0, 0x02, 0xa6, 0xad, 0xee, 0xb4, 0xe7,
	0x67, 0x39, 0x2b, 0x9f, 0x88, 0x38, 0x14, 0x7f, 0xc6, 0xb0, 0xd8, 0x58, 0x75, 0x6d, 0xbc, 0xfb,
	0x8d, 0xa7, 0x30, 0xd6, 0x92, 0xb3, 0xc0, 0xc7, 0x5a, 0x3e, 0xd6, 0xd6, 0x1c, 0xe6, 0x8d, 0x35,
	0x9e, 0x7e, 0x79, 0xbe, 0xcc, 0x59, 0x79, 0x22, 0x0e, 0x23, 0x7e, 0x02, 0x68, 0x1c, 0xd5, 0x9e,
	0xe4, 0x4d, 0xed, 0xf7, 0x52, 0xb2, 0x2a, 0x1e, 0xbc, 0x3a, 0x1c, 0xfc, 0x81, 0x9f, 0xe5, 0x7e,
	0xfb, 0xb3, 0x2f, 0xbe, 0xc1, 0xf9, 0xfd, 0xd1, 0xfb, 0xad, 0x35, 0x3d, 0x61, 0x01, 0x49, 0x6b,
	0x55, 0xcf, 0x59, 0x3e, 0x29, 0xd3, 0xd5, 0x69, 0xb4, 0x7b, 0xb0, 0x25, 0x02, 0xc3, 0x57, 0x30,
	0x21, 0xe7, 0x82, 0xd4, 0x74, 0x95, 0xc6, 0x95, 0x6b, 0xe7, 0xac, 0x13, 0x43, 0x5e, 0xfc, 0x65,
	0xf0, 0x74, 0xa3, 0x7b, 0x4f, 0xe6, 0xf1, 0x7f, 0x4e, 0xab, 0x1d, 0x4c, 0x36, 0x56, 0xe1, 0x47,
	0x48, 0x06, 0x15, 0xf8, 0x2c, 0xb6, 0x39, 0xfa, 0x17, 0xb2, 0xe7, 0xc7, 0x71, 0xb4, 0x55, 0x8c,
	0xf0, 0x03, 0xcc, 0x62, 0x57, 0xbc, 0xdc, 0xbb, 0x3a, 0x6e, 0x9e, 0x1d, 0x49, 0x2c, 0x46, 0xef,
	0xd8, 0x97, 0xd1, 0xed, 0x2c, 0xdc, 0xe6, 0xfd, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x63,
	0xba, 0x33, 0xbd, 0x03, 0x00, 0x00,
}
