// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kamilsk/click/pkg/server (interfaces: Service)

// Package server_test is a generated GoMock package.
package server_test

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	transfer "github.com/kamilsk/click/pkg/transfer"
	v1 "github.com/kamilsk/click/pkg/transfer/api/v1"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// HandleGetV1 mocks base method
func (m *MockService) HandleGetV1(arg0 context.Context, arg1 v1.GetRequest) v1.GetResponse {
	ret := m.ctrl.Call(m, "HandleGetV1", arg0, arg1)
	ret0, _ := ret[0].(v1.GetResponse)
	return ret0
}

// HandleGetV1 indicates an expected call of HandleGetV1
func (mr *MockServiceMockRecorder) HandleGetV1(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGetV1", reflect.TypeOf((*MockService)(nil).HandleGetV1), arg0, arg1)
}

// HandlePass mocks base method
func (m *MockService) HandlePass(arg0 context.Context, arg1 transfer.PassRequest) transfer.PassResponse {
	ret := m.ctrl.Call(m, "HandlePass", arg0, arg1)
	ret0, _ := ret[0].(transfer.PassResponse)
	return ret0
}

// HandlePass indicates an expected call of HandlePass
func (mr *MockServiceMockRecorder) HandlePass(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandlePass", reflect.TypeOf((*MockService)(nil).HandlePass), arg0, arg1)
}

// HandleRedirect mocks base method
func (m *MockService) HandleRedirect(arg0 context.Context, arg1 transfer.RedirectRequest) transfer.RedirectResponse {
	ret := m.ctrl.Call(m, "HandleRedirect", arg0, arg1)
	ret0, _ := ret[0].(transfer.RedirectResponse)
	return ret0
}

// HandleRedirect indicates an expected call of HandleRedirect
func (mr *MockServiceMockRecorder) HandleRedirect(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRedirect", reflect.TypeOf((*MockService)(nil).HandleRedirect), arg0, arg1)
}
